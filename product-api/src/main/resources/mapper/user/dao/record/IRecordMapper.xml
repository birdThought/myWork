<?xml version="1.0" encoding="UTF-8" ?>
<!-- 病历单独映射表 -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lifeshs.product.dao.record.IRecordDao">
    <select id="selectMedicalByUserId" resultType="java.util.HashMap">
        Select * From
        t_record_medical
        Where userId =#{userId}
        Order By visitingDate DESC
    </select>
    <select id="selectMedicalByMedicalIdAndUserId" resultType="java.util.HashMap">
        SELECT * FROM t_record_medical
        WHERE id = #{medicalId} AND userId = #{userId}
    </select>
    <select id="selectMedicalByUserIdPageSplit" resultType="java.util.HashMap">
        Select *
        From t_record_medical
        Where userId =#{userId}
        Order By visitingDate
        DESC, id DESC LIMIT #{startIndex},#{pageSize}
    </select>

    <!-- 根据日期与用户ID获取病历信息 -->
    <select id="selectMedicalByVisitingDateAndUserId" resultType="java.util.HashMap">
        SELECT
        m.id,
        m.title,
        m.basicCondition,
        u.realName,
        ur.gender AS sex,
        ur.birthday
        FROM
        t_record_medical m
        INNER JOIN t_user u ON u.id = m.userId
        INNER JOIN t_user_record ur ON ur.userId = u.id
        WHERE
        m.visitingDate = #{visitingDate}
        AND u.id = #{userId};
    </select>

    <select id="selectDietFoodByDietId" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT
        df.id AS id,
        f.image,
        f.`name`,
        df.foodWeight,
        f.id AS foodId,
        fk.`name` AS kind,
        df.kcal
        FROM
        t_record_diet_food df
        INNER JOIN t_data_food f ON df.foodID = f.id
        INNER JOIN t_data_food_kind fk ON fk.id = f.kind
        WHERE
        df.dietId = #{dietId}
    </select>

    <select id="selectPhysicalsCountByUserId" parameterType="java.util.HashMap" resultType="java.lang.Integer">
        Select Count(*) From t_record_physicals
        Where userId =#{userId}
    </select>
    <select id="selectMedicalCourseByCourseType" resultType="java.util.HashMap">
        Select *
        From t_record_medical_course
        Where courseType =#{courseType} AND
        medicalId = #{medicalId}
        Order By visitingDate DESC
    </select>

    <select id="selectMedicalCourseByMedicalIdPageSplit" resultType="java.util.HashMap">
        Select * From t_record_medical_course
        Where medicalId =#{medicalId}
        Order By id DESC LIMIT #{startIndex},#{pageSize}
    </select>

    <select id="selectMedicalCourseByCourseTypePageSplit"
            resultType="java.util.HashMap">
        Select * From t_record_medical_course
        Where courseType
        =#{courseType}
        Order By visitingDate DESC LIMIT
        #{startIndex},#{pageSize}
    </select>

    <select id="selectMedicalCourseCountByMedicalId" resultType="java.lang.Integer">
        Select Count(*) From t_record_medical
        Where medicalId =#{medicalId}
    </select>

    <select id="selectPhysicalsByUserIdPageSplit" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        Select p.id,
        p.userId,
        p.title,
        p.physicalsOrg,
        p.img1,
        p.img2,
        p.img3,
        p.createDate,
        p.description,
        p.id,
        p.physicalsDate
        From
        t_record_physicals p
        Where
        p.userId =#{userId}
        Order By
        p.physicalsDate DESC, p.id DESC LIMIT #{startIndex},#{pageSize}
    </select>

    <select id="selectDietByUserIdWithDate" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT
        r.id, r.userId, r.recordDate, r.dietType, r.dietTime, r.energy, r.createDate
        FROM
        t_record_diet r
        WHERE
        r.userId =#{userId} And date_format(r.recordDate,'%Y-%m-%d')=#{recordDate}
        ORDER BY
        CONVERT(r.dietType USING GBK) DESC
    </select>

    <!-- 按日期间隔查询能量 -->
    <select id="selectDietEnergyByUserIdWithDate" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT
        SUM(energy) AS energy,
        recordDate
        FROM
        t_record_diet
        WHERE
        userId = #{userId}
        <choose>
            <when test="customSetDate">
                AND #{startDate} &lt;= DATE(recordDate) AND DATE(recordDate) &lt;= #{endDate}
            </when>
            <otherwise>
                AND DATE_SUB(CURDATE(), INTERVAL 7 DAY) &lt;= DATE(recordDate)
            </otherwise>
        </choose>
        GROUP BY
        recordDate;
    </select>

    <select id="selectFoodByKind" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT
        t_data_food. NAME,
        t_data_food.ID,
        t_data_food.KCAL,
        t_data_food.image
        FROM
        t_data_food,
        t_data_food_kind
        WHERE
        t_data_food_kind.id = t_data_food.kind
        AND t_data_food_kind.`name` = #{kindName}
    </select>

    <select id="selectCountOfDietGroupByDate" resultType="java.lang.Integer">
        SELECT
        COUNT(1)
        FROM
        (
        SELECT
        d.*
        FROM
        t_record_diet d
        WHERE d.userId = #{userId}
        GROUP BY
        d.recordDate
        ) AS c;
    </select>

    <select id="selectDietDateGroupByDateWithPageSplit" resultType="java.lang.String">
        SELECT
        recordDate
        FROM
        t_record_diet d
        WHERE d.userId = #{userId}
        GROUP BY
        recordDate
        ORDER BY
        recordDate DESC
        LIMIT #{startIndex}, #{pageSize};
    </select>
    <select id="selectDietsWithDates" resultType="com.lifeshs.product.domain.dto.record.DietDetail">
        SELECT
        d.id,
        d.dietType,
        d.dietTime,
        d.energy,
        d.recordDate,
        f.id AS foodId,
        f.`name` AS foodName,
        df.foodWeight,
        df.kcal,
        f.image
        FROM
        t_record_diet d
        INNER JOIN t_record_diet_food df ON df.dietId = d.id
        INNER JOIN t_data_food f ON f.id = df.foodID
        WHERE
        d.recordDate IN
        <foreach collection="recordDates" open="(" close=")" separator="," index="index" item="dd">
            #{dd}
        </foreach>
        AND d.userId = #{userId}
    </select>

    <select id="selectSportEnergyByUserIdWithDate" resultType="com.lifeshs.product.domain.po.record.TRecordSport">
        SELECT
        SUM(energy) AS energy,
        recordDate
        FROM
        t_record_sport
        WHERE
        userId = #{userId}
        <choose>
            <when test="customSetDate">
                AND #{startDate} &lt;= DATE(recordDate) AND DATE(recordDate) &lt;= #{endDate}
            </when>
            <otherwise>
                AND DATE_SUB(CURDATE(), INTERVAL 7 DAY) &lt;= DATE(recordDate)
            </otherwise>
        </choose>
        GROUP BY
        recordDate;
    </select>

    <select id="selectTRecordSportWithDate" resultMap="A">
        SELECT * FROM
        t_record_sport
        WHERE
        userId = #{userId}
        And date_format(recordDate,'%Y-%m-%d')=#{recordDate}
        ORDER BY startTime
    </select>
    <resultMap type="com.lifeshs.product.domain.po.record.TRecordSport" id="A">
        <id property="id" column="id"/>
        <!-- <result property="energy" column="energy" />
        <result property="userId" column="userId" />
        <result property="startTime" column="startTime" />
        <result property="recordDate" column="recordDate" />
        <result property="createDate" column="createDate" /> -->
        <collection property="details" ofType="com.lifeshs.product.domain.po.record.TRecordSportDetail" column="id" select="A2"/>
    </resultMap>

    <delete id="delSportByRecordSportId" parameterType="java.lang.Integer">
        DELETE t_record_sport.*, t_record_sport_detail.*  FROM t_record_sport, t_record_sport_detail
        WHERE t_record_sport.id = #{recordSportId}
        AND t_record_sport.id = t_record_sport_detail.recordId
    </delete>

    <delete id="deleteSportDetail" parameterType="java.lang.Integer">
        DELETE FROM t_record_sport_detail
        WHERE id = #{detailId}
    </delete>
</mapper>